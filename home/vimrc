
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" BufReadPost   -> declenche apres lecture d'un nouveau fichier





"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""




" pour retourner a la derniere position dans le fichier
autocmd BufReadPost *
    \ if line("'\"") > 0 && line("'\"") <= line("$") |
    \   exe "normal g`\"" |
    \ endif


" l'option modelines specifie le nombre de lignes a inspecter au debut et a la
" fin du fichier a la recherche d'une ligne de mode
set modelines=0


" pour charger ftpplugin.vim
filetype plugin on

" pour charger indent.vim
filetype indent on


" charger theme de couleur evening
colorscheme evening


" lors d'une recherche, surligner tous les cas 
set hlsearch
" <F8> pour mettre hlsearch ou pas
noremap <F8> :set hlsearch!<cr>:set hlsearch?<cr>

" affiche le(la) parenthese,acolade,crochet correspondant(e) ouvrant(e) 
set showmatch

" nb minimal de lignes au dessus et dessous du curseur 
set scrolloff=15

" utilisation du mode Vim et non Vi (le mode est ameliore)
set nocompatible

" RetArr est autorise a supprimer l'espace blanc au debut d'une ligne, 
" supprimer une coupure de ligne et aussi les caracteres avant 
" la position d'ou l'insertion avait debute
" comme backspace=indent,eol,start
set backspace=2	

" autoindentation par rapport a la ligne precedente
set autoindent

" largeur max du texte en cours d'insertion
" ici ne pas couper les mots lors d'un colle
set textwidth=0	

" lire et ecrire un .viminfo et ne pas stocker plus de 50 lignes
set viminfo='20,\"50

" garder seulement 50 lignes dans l'historique de commande
set history=50	

" afficher la position courrante du curseur tout le temps (en bas a droite)
set ruler

"--------------------------------------------------------
" Suffixes that get lower priority when doing tab completion for filenames.
" These are files we are not likely to want to edit or read.
set suffixes=.bak,~,.swp,.o,.info,.aux,.log,.dvi,.bbl,.blg,.brf,.cb,.ind,.idx,.ilg,.inx,.out,.toc

" inclus les caracteres dans les noms de fichiers
set isfname=@,48-57,/,.,-,_,+,,,#,$,%,~


" ------------------arret ici -------------------------------"
" ------------------arret ici -------------------------------"
" ------------------arret ici -------------------------------"
" ------------------arret ici -------------------------------"
" ------------------arret ici -------------------------------"


if has("syntax")
  syntax on		" Default to no syntax highlightning 
endif


if has("autocmd")

" Set some sensible defaults for editing C-files
augroup cprog
  " Remove all cprog autocommands
  au!

  " When starting to edit a file:
  "   For *.c and *.h files set formatting of comments and set C-indenting on.
  "   For other files switch it off.
  "   Don't change the order, it's important that the line with * comes first.
  autocmd BufRead *       set formatoptions=tcql nocindent comments&
  autocmd BufRead *.cpp,*.c,*.h set formatoptions=croql cindent comments=sr:/*,mb:*,el:*/,://
augroup END

endif " has ("autocmd")

" The following are commented out as they cause vim to behave a lot
" different from regular vi. They are Highly recommended though.
"set showcmd		" Show (partial) command in status line.
set showmatch		" Show matching brackets.
"set ignorecase		" Do case insensitive matching
set incsearch		" Incremental search
" set digraph
"set autowrite		" Automatically save before commands like :next and :make
" auto indentation pour la programmation
" permet d'avoir la position
set et
set tabstop=4
set shiftwidth=4

"mes fichier sont unix tout le temps
set fileformats=unix
set formatoptions=rtql

" pas de copie de sauvegarde
"set nobackup

" syntax keyword moi MichouX
"hi moi ctermfg=darkblue guifg=#000099

" permet les couleurs pour la prog
" autocmd BufRead *.sh,*.c,*.h,*.pl,mutt*,*.php,*.php3,*.html,*.htm syntax on

" pour la prog avec mots clefs
autocmd BufRead *.html,*.htm set ft=html
autocmd BufRead *.php,*.php3 set ft=php
autocmd BufRead *.c,*.h set ft=c
autocmd BufRead .followup,.article*,.letter,/tmp/mutt*,*.txt set ft=mail
autocmd BufRead *.sh set ft=sh
autocmd BufRead *.pl set ft=perl

" commente/decommenter auto
autocmd BufEnter *.sh,*.pl,*rc vmap ;com :s/^/# /<CR>
autocmd BufEnter *.sh,*.pl,*rc vmap ;uncom :s/^#[<TAB> ]//<CR>
autocmd BufEnter *.htm,*.html,*.xml,*.wml vmap ;com :<backspace><backspace><backspace><cr>O<!--<esc>:'><cr>o--><esc>
autocmd BufEnter *.html,*.php,*.php3 vmap ;table :<backspace><backspace><backspace><cr>O<table><esc>:'><cr>o</table><esc>
autocmd BufEnter *.html,*.php,*.php3 vmap ;tr <tab>O<tab><tr><esc>:'><cr>o<tab></tr><esc>
autocmd BufEnter *.html,*.php,*.php3 vmap ;td <tab>O<tab><td><esc>:'><cr>o<tab></td><esc>
autocmd BufEnter *.html,*.php,*.php3 vmap ;form <tab>O<tab><form action=\".\" method=get enctype=\"text/plain\"><esc>:'><cr>o<tab></form><esc>
autocmd BufEnter *.php,*.php3 nnoremap gx yiw/^\(sub\<bar>function\)\s\+<C-R>"<CR>
autocmd BufEnter *.vimrc vmap ;com :s/^/" /<CR>
autocmd BufEnter *.vimrc vmap ;uncom :s/^"[<TAB> ]//<CR>
autocmd BufEnter *.php,*.c,*.h,*.cc,*.C,*.H,*.hh,*.cpp,*.cxx,*.c++,*.y,*.l vmap ;com :s/^/\/\/ /g<CR>
autocmd BufEnter *.php,*.c,*.h,*.cc,*.C,*.H,*.hh,*.cpp,*.cxx,*.c++,*.y,*.l vmap ;uncom :s/^\/\/[<TAB> ]//g<CR>
" map!  <ESC>lxi
" nnoremap  x
" nnoremap  hx

set noautoindent

" ajout  accolade
" map!  <ESC>:.,$g/^[ 	]*$/d<CR>i
" nnoremap  :.,$g/^[ 	]*$/d<CR>

autocmd BufEnter *.c,*.h,*.cc,*.C,*.H,*.hh,*.cpp,*.cxx,*.c++,*.y,*.l map!  {<ESC>o}<ESC>O
autocmd BufEnter *.c,*.h,*.cc,*.C,*.H,*.hh,*.cpp,*.cxx,*.c++,*.y,*.l nnoremap  o{<ESC>o}<ESC>O

"delete
"map! <ESC>[3~ <ESC>lxi
" nnoremap <ESC>[3~ x

" backspace     
" map! <S- > <M- >
map!  <backspace>
" nnoremap  hx
" map! <ESC>Oq 1
" map! <ESC>Or 2
" map! <ESC>Os 3
" map! <ESC>Ot 4
" map! <ESC>Ou 5
" map! <ESC>Ov 6
" map! <ESC>Ow 7
" map! <ESC>Ox 8
" map! <ESC>Oy 9
" map! <ESC>OQ /
" map! <ESC>OR *
" map! <ESC>OS -
" map! <ESC>Ol +
" map! <ESC>OM <CR>
" map! <ESC>On .
" map! <ESC>Op 0
nnoremap [2~ 0
nnoremap [4~ $
map! [2~ <esc>I
map! [4~ <esc>A

"tabulation
nnoremap <TAB> >>
" nnoremap <ESC>[Z <<
vnoremap <TAB> >
" vnoremap <ESC>[Z <
" vnoremap <SHIFT><TAB> <
inoremap  <esc>O
inoremap  <esc>o

" Editer le .vimrc 
nnoremap ;v :split ~/.vimrc " <CR>:source ~/.vimrc<CR>
" Reload le .vimrc sans quitter vim
" autocmd BufLeave .vimrc :source ~/.vimrc<CR>
" autocmd BufWritePost ~/.vimrc :source ~/.vimrc

" pour le c
autocmd BufEnter *.c,*.h,*.cc,*.C,*.H,*.hh,*.cpp,*.cxx,*.c++,*.y,*.l inoreab def <ESC>:0<CR>O#define
autocmd BufEnter *.c,*.h,*.cc,*.C,*.H,*.hh,*.cpp,*.cxx,*.c++,*.y,*.l inoreab de <ESC>:0<CR>/#define<CR>O#define
autocmd BufEnter *.c,*.h,*.cc,*.C,*.H,*.hh,*.cpp,*.cxx,*.c++,*.y,*.l inoreab inc <ESC>:0<CR>O#include
autocmd BufEnter *.c,*.h,*.cc,*.C,*.H,*.hh,*.cpp,*.cxx,*.c++,*.y,*.l inoreab in <ESC>:0<CR>/#include<CR>O#include
autocmd BufEnter *.c,*.h,*.cc,*.C,*.H,*.hh,*.cpp,*.cxx,*.c++,*.y,*.l inoreab For for()<CR>	{<CR>	<ESC>o	}<ESC>3k03li
autocmd BufEnter *.c,*.h,*.cc,*.C,*.H,*.hh,*.cpp,*.cxx,*.c++,*.y,*.l inoreab While while()<CR>	{<CR>	<ESC>o	}<ESC>3k$i
" autocmd BufEnter *.c,*.h,*.cc,*.C,*.H,*.hh,*.cpp,*.cxx,*.c++,*.y,*.l set noautoindent

"marche pas sur deb apparement...
" highlight Search      term=reverse ctermbg=2 guibg=Yellow

set foldmethod=marker
" set foldmarker={,}
" set foldminlines=5
" highlight Folded ctermbg=0 ctermfg=7

" mails
"permet de faire des lignes de 60 caracteres
autocmd BufRead .followup,.article*,.letter,/tmp/mutt*,*.txt,.signature*,signature* set tw=60
autocmd BufRead .followup,.article*,.letter,/tmp/mutt*,*.txt,.signature*,signature* set foldmethod=manual
autocmd BufRead .followup,.article*,.letter,/tmp/mutt*,*.txt,.signature*,signature* set comments+=n:\|
" autocmd BufRead .followup,.article*,.letter,/tmp/mutt*,*.txt,.signature*,signature* set comments=fs1:/*,mb:*,ex:*/,://,b:#,:%,:XCOMM,n:>,fb:-,n:\|

" pour insert le followup automatiquement.
nnoremap ;fu /Newsgroups<CR>wlDp/Followup-To:<CR>/: <CR>plD
"pour aller au debut du message
nnoremap ;vide gg<CR>/^$<CR>
" nnoremap ;par ;vide<CR>:.,$normal vgq<CR>
" nnoremap ;par :exec '.,$g/^.\{'.&tw.'\}.\+$/normal V)gq'<CR>
" /^.\{75\}.\+$<CR>v/\.$<CR>gqj

 function s:Par()
	let fin_range_delta=line('$')-search('^-- $','W')
	echo "range delta de fin : " . fin_range_delta
" je commence a la premiere ligne vide (après les headers)
	normal! G
	let pos = search('^$')
	let oldpos = pos
	echo "definition de pos:" . pos
" je vais a la fin puis remonte au dessus de la signature.
	let pos = search('^.\{'.&tw.'\}.\+$', 'W') 
" je me place au debut de ce que je dois traiter.
    while ( pos < line('$')-fin_range_delta ) && ( oldpos < pos )
 		if pos < 1
 			break 
 		endif
" detection de la fin du paragraphe.
		let end = pos
		let end = search('\(^\(> \)*\|[:;=][-o]\?[pD{[(/\\}\])]\|[:.!?]\)\s*$', 'W')
		let delta = end - pos
echo "mise en page de " . pos . " sur " . delta ." lignes."
		if delta <= 0
			exe pos.'normal! gqq'
		else
			exe pos.'normal! gq'.delta.'j'
		endif
 		let oldpos = pos
		let pos = search('^.\{'.&tw.'\}.\+$', 'W') 
     endwhile
 endfunction
 
autocmd BufRead .followup,.article*,.letter,/tmp/mutt* nnoremap ;para gg:call <sid>Par()<cr>

nnoremap ;é :silent! %s/…/é/g<CR>
nnoremap ;' :silent! %s/’/'/g<CR>
nnoremap ;oe :silent! %s/œ/oe/g<CR>
nnoremap ;MM :silent! %s/\r//g<CR>gg
autocmd BufRead .followup,.article*,.letter,/tmp/mutt* nnoremap ;redu  :silent! %s/\(^[> ]\+\)\(\n^[> ]\+$\)\+/\1/<CR>
autocmd BufRead .followup,.article*,.letter,/tmp/mutt* nnoremap ;rmsig G:silent! /^>[> ]*-- $<CR>:.,$g/^>[> ]*/d<CR>
autocmd BufRead .followup,.article*,.letter,/tmp/mutt* nnoremap ;rmyahoo G:silent! /^>[> ]*=====$<CR>:.,$g/^>[> ]*/d<CR>
" pour elever le reste des quotes
autocmd BufRead .followup,.article*,.letter,/tmp/mutt* nnoremap <C-S> :.,$g/^>[ >]\?/d<CR>i
"pour aller a la prochaine quote vide.
" autocmd BufRead .followup,.article*,.letter,/tmp/mutt* map! <C-S> <ESC>md/^\(>[ >]\+\\|\)$<CR>C
autocmd BufRead .followup,.article*,.letter,/tmp/mutt* map! <C-S> <ESC>j/^\(>[ >]\+\\|\)$<CR>C
autocmd BufRead .followup,.article*,.letter,/tmp/mutt* map! <C-T> <esc>g`da

vnoremap <buffer> ;snip dO> [snip]<Esc>
vnoremap <buffer> ;... dO> [...]<Esc>

" signatures.
" efface la signature courante
autocmd BufRead .followup,.article*,.letter,/tmp/mutt* nnoremap ;sig  mS/^-- $<CR>V}c-- <esc>:r!~/bin/signature.pl<CR>`S
autocmd BufRead .followup,.article*,.letter,/tmp/mutt* nnoremap ;cord mS/^-- $<CR>V}c-- <CR>Cordialement,<CR>    Sébastien MICHEL<ESC>`Sl
autocmd BufRead .followup,.article*,.letter,/tmp/mutt* nnoremap ;talc mS/^-- $<CR>V}c-- <ESC>:r ~/.signature.cord<CR>`Sl
autocmd BufRead .followup,.article*,.letter,/tmp/mutt* nnoremap ;rega mS/^-- $<CR>V}c-- <CR>Regards,<CR>    Sébastien MICHEL<ESC>`Sl
autocmd BufRead .followup,.article*,.letter,/tmp/mutt* nnoremap ;salu mS/^-- $<CR>V}c-- <CR>Dans l'attente d'une réponse je vous prie d'agréer mes salutations distinguées,<CR>    Sébastien MICHEL<ESC>`Sl
autocmd BufRead .followup,.article*,.letter,/tmp/mutt* inoremap ;sig	<esc>;sig
autocmd BufRead .followup,.article*,.letter,/tmp/mutt* noremap! ;rega	<esc>;rega
autocmd BufRead .followup,.article*,.letter,/tmp/mutt* noremap! ;salu	<esc>;salu
autocmd BufRead .followup,.article*,.letter,/tmp/mutt* noremap! ;cord	<esc>;cord
autocmd BufRead .followup,.article*,.letter,/tmp/mutt* noremap! ;talc	<esc>;talc
autocmd BufRead .followup,.article*,.letter,/tmp/mutt* nnoremap ;cv :normal i;cv<cr>
autocmd BufRead .followup,.article*,.letter,/tmp/mutt* nnoremap ;was gg/^Subject<CR>2wi[was: <ESC><END>a ]<ESC>0wli 
autocmd BufRead .followup,.article*,.letter,/tmp/mutt* nnoremap ;tip gg/^Subject<CR>2wi[tip] <ESC>:normal ;vide<CR>
autocmd BufRead .followup,.article*,.letter,/tmp/mutt* noremap! ;cv Vous trouverez mon CV au format html attaché à ce mail ainsi que sur mon site web: http://michoux.born2frag.org/CV/

autocmd BufRead .followup,.article* normal ;fu
" passer directement au message
autocmd BufRead .followup,.article*,.letter,/tmp/mutt* normal ;MM
autocmd BufRead .followup,.article*,.letter,/tmp/mutt* normal ;para
autocmd BufRead .followup,.article*,.letter,/tmp/mutt* normal ;redu
autocmd BufRead .followup,.article*,.letter,/tmp/mutt* normal ;rmsig
autocmd BufRead .followup,.article*,.letter,/tmp/mutt* normal ;rmyahoo
autocmd BufRead .followup,.article*,.letter,/tmp/mutt* normal ;'
autocmd BufRead .followup,.article*,.letter,/tmp/mutt* normal ;é
autocmd BufRead .followup,.article*,.letter,/tmp/mutt* normal ;vide


inoreab dsna dans
inoreab dnas dans
inoreab tlse Toulouse
inoreab toulouse Toulouse


" Fabien Penso - Pour copier/coller du texte dans deux sessions vim
nnoremap    _Y      :.w! ~/.vi_tmp<CR>
vnoremap    _Y      :w! ~/.vi_tmp<CR>
nnoremap    _P      :r ~/.vi_tmp<CR>
nnoremap     <C-Z>   :shell<CR>
nnoremap     [c   :bn<cr>
nnoremap     [d   :bp<cr>
nnoremap     [a   :ls<cr>
inoremap     [c   <esc>:bn<cr>
inoremap     [d   <esc>:bp<cr>
inoremap     [a   <esc>:ls<cr>
"nnoremap     <C-N>   :bn<cr>
"nnoremap     <C-P>   :bp<cr>
"inoremap     <C-N>   <esc>:bn<cr>
"inoremap     <C-P>   <esc>:bp<cr>
"inoremap     <C-L>   <esc>:ls<cr>


" nnoremap     <C-O>   T vt y:split <C-R>"<CR>

" pour mon signature.pl
autocmd BufRead signature*	nnoremap	;ins /^}$<CR>zvO}elsif ($num==$REF++)<CR>{<CR>print "$SIG <CR>\"<CR>\"<CR>";<ESC>kka
autocmd BufRead blog 		nnoremap	;ins :0<cr>Oµ<cr>µ<cr>MichouXµ<esc>:r!date +\%e/\%m/\%Y<cr>Aµ<cr><esc>:0<cr>i
autocmd BufRead blog 		nnoremap	;up o<b><u>UPDATE&nbsp;:</u></b><br/><esc>F<i


" highlight Normal	ctermfg=white ctermbg=black
highlight Folded	ctermfg=blue ctermbg=black
highlight Search term=reverse ctermbg=blue ctermfg=White guibg=blue guifg=White
highlight Visual term=reverse ctermbg=blue gui=reverse guifg=Grey guibg=fg
highlight WildMenu term=standout ctermbg=Black ctermfg=blue guibg=Yellow guifg=blue
set dictionary=~/.vim/dictionary

" set foldmethod=syntax
